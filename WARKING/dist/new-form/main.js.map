{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/user.service.ts","webpack:///./src/app/users/users.component.css","webpack:///./src/app/users/users.component.html","webpack:///./src/app/users/users.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-users></app-users>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n\nimport { AppComponent } from './app.component';\nimport { UsersComponent } from './users/users.component';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UsersComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Http, Headers, Response} from '@angular/http';\nimport { User } from './user';\n\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: Http) { }\n\n  getUsers(){\n    return this.http.get('http://localhost:3000/api/users')\n      .pipe(map(res => res.json()));\n  }\n\n  addUser(newUser){\n    var headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n\n    return this.http.post('http://localhost:3000/api/users/', newUser, {headers:headers})\n      .pipe(map(res => res.json()));\n  }\n\n  updateUser(newUser){\n    var headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n\n    return this.http.put('http://localhost:3000/api/users/'+newUser._id, newUser, {headers:headers})\n      .pipe(map(res => res.json()));\n  }\n\n  deleteUser(id){\n    return this.http.delete('http://localhost:3000/api/users/'+id)\n      .pipe(map(res => res.json()));\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n\\n  <form #frm=\\\"ngForm\\\" (ngSubmit)=\\\"addUser(frm)\\\" *ngIf=\\\"!toggleForm\\\">\\n    <br>\\n    <h2 class=\\\"page-header\\\">Add User</h2>\\n\\n    <div class=\\\"form-group\\\">\\n      <label>First Name</label>\\n      <input type=\\\"text\\\" name=\\\"firstname\\\" class=\\\"form-control\\\" placeholder=\\\"Tester\\\" ngModel required>\\n    </div>\\n\\n\\n    <div class=\\\"form-group\\\">\\n      <label>Last Name</label>\\n      <input type=\\\"text\\\" name=\\\"lastname\\\" class=\\\"form-control\\\" placeholder=\\\"Testerson\\\" ngModel required>\\n\\n    </div>\\n\\n\\n    <div class=\\\"form-group\\\">\\n      <label>Email</label>\\n      <input type=\\\"text\\\" name=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Tester@testerson.com\\\" ngModel>\\n    </div>\\n\\n    <hr>\\n\\n    <button class=\\\"btn btn-outline-dark\\\" type=\\\"submit\\\" [disabled]=frm.invalid>Add</button>\\n  </form>\\n\\n  <form #editfrm=\\\"ngForm\\\" (ngSubmit)=\\\"editUser(editfrm)\\\" *ngIf=\\\"toggleForm\\\">\\n    <br>\\n    <h2 class=\\\"page-header\\\">Update User</h2>\\n\\n    <div class=\\\"form-group\\\">\\n      <label>First Name</label>\\n      <input type=\\\"text\\\" name=\\\"firstname\\\" class=\\\"form-control\\\" [ngModel]=\\\"selectedUser.firstname\\\">\\n    </div>\\n\\n\\n    <div class=\\\"form-group\\\">\\n      <label>Last Name</label>\\n      <input type=\\\"text\\\" name=\\\"lastname\\\" class=\\\"form-control\\\" [ngModel]=\\\"selectedUser.lastname\\\">\\n    </div>\\n\\n\\n    <div class=\\\"form-group\\\">\\n      <label>Email</label>\\n      <input type=\\\"text\\\" name=\\\"email\\\" class=\\\"form-control\\\" [ngModel]=\\\"selectedUser.email\\\">\\n    </div>\\n\\n    <hr>\\n\\n    <button class=\\\"btn btn-outline-dark\\\" type=\\\"submit\\\">Save</button>\\n  </form>\\n\\n</div>\\n\\n<hr>\\n<br>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-5\\\">\\n      <h3>Name</h3>\\n    </div>\\n    <div class=\\\"col-md-5\\\">\\n      <h3>Email</h3>\\n    </div>\\n  </div>\\n  <hr>\\n  <br>\\n  <div *ngFor=\\\"let user of users\\\" class=\\\"row\\\">\\n    <div class=\\\"col-md-5\\\">\\n      <h6>{{user.firstname}} {{user.lastname}}</h6>\\n    </div>\\n    <div class=\\\"col-md-5\\\">\\n      <h6>{{user.email}}</h6>\\n    </div>\\n    <div class=\\\"col-md-1\\\">\\n      <button (click)=updateUser(user)\\n      [ngClass]=\\\"(!this.toggleForm)?'btn btn-outline-success btn-sm':'btn btn-primary-success btn-sm'\\\">\\n      {{(!this.toggleForm)?'Update':'Return'}}</button>\\n    </div>\\n    <div class=\\\"col-md-1\\\">\\n      <input type=\\\"button\\\" (click)=deleteUser(user._id) value=\\\"delete\\\" class=\\\"btn btn-outline-danger btn-sm\\\">\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { User } from '../user';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { UsernameValidators } from '../app.validators';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css'],\n  providers: [UserService]\n})\nexport class UsersComponent implements OnInit {\n  users: User[];\n  user: User;\n\n  selectedUser: User\n  toggleForm: boolean = false\n\n  constructor(private userService: UserService) { }\n\n  addUser(form) {\n    const newUser: User = {\n      firstname: form.value.firstname,\n      lastname: form.value.lastname,\n      email: form.value.email\n    };\n\n    this.userService.addUser(newUser)\n      .subscribe(user => {\n        this.users.push(user);\n        this.userService.getUsers()\n          .subscribe(users => this.users = users);\n      })\n  }\n\n  deleteUser(id: any) {\n    var users = this.users;\n    this.userService.deleteUser(id)\n      .subscribe(data => {\n        if (data.n == 1) {\n          for (var i = 0; i < users.length; i++) {\n            if (users[i]._id == id) {\n              users.splice(i, 1);\n            }\n          }\n        }\n      })\n  }\n\n  updateUser(user) {\n    this.selectedUser = user;\n    this.toggleForm = !this.toggleForm;\n  }\n\n  editUser(form) {\n    let newUser: User = {\n      _id: this.selectedUser._id,\n      firstname: form.value.firstname,\n      lastname: form.value.lastname,\n      email: form.value.email\n    };\n\n    this.userService.updateUser(newUser)\n      .subscribe(user => {\n        this.userService.getUsers()\n          .subscribe(users => this.users = users);\n        this.toggleForm = !this.toggleForm;\n      });\n\n\n  }\n\n  ngOnInit() {\n    this.userService.getUsers()\n      .subscribe(users => this.users = users);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}